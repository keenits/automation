<#
.SYNOPSIS
Creates a scheduled task named "Service Check" that executes a PowerShell script named ServiceCheck.ps1 every 30 minutes with elevated privileges.

.DESCRIPTION
Creates a scheduled task named "Service Check" to run a specified PowerShell script every 30 minutes with elevated privileges. 
It includes a transcript file located at ProgramData\Automation\Logs.

#>

# Define variables
$taskName = "Service Check"
$scriptPath = "C:\ProgramData\Automation\Scripts\ServiceCheck.ps1"
$transcriptPath = "$env:ProgramData\Automation\Logs\ServiceCheck_$(Get-Date -Format 'yyyyMMdd').log"
$ErrorActionPreference = "Stop"

# Start transcript logging
Start-Transcript -Path $transcriptPath

try {
    if (-not (Test-Path $scriptPath)) {
        throw "The script 'ServiceCheck.ps1' does not exist at 'C:\ProgramData\Automation\Scripts'."
    }

    # Check if the task already exists
    if (Get-ScheduledTask -TaskName $taskName -ErrorAction SilentlyContinue) {
        Write-Host "Scheduled task '$taskName' already exists." -ForegroundColor Yellow
        exit
    }

    $actionScript = $scriptPath
    $triggerInterval = (New-TimeSpan -Minutes 30)
    $principal = New-ScheduledTaskPrincipal -UserID "NT AUTHORITY\SYSTEM" -LogonType ServiceAccount

    # Create a new scheduled task action
    $action = New-ScheduledTaskAction -Execute "PowerShell.exe" -Argument "-NoProfile -WindowStyle Hidden -ExecutionPolicy Bypass -File `"$actionScript`""

    # Create a new trigger for the scheduled task
    $trigger = New-ScheduledTaskTrigger -Once -At (Get-Date) -RepetitionInterval $triggerInterval -RepetitionDuration ([timespan]::MaxValue)

    # Register the scheduled task
    Register-ScheduledTask -TaskName $taskName -Action $action -Trigger $trigger -Principal $principal -RunLevel Highest -Force

    Write-Host "Scheduled task '$taskName' created successfully." -ForegroundColor Green
} 
catch {
    Write-Host "Error: $_" -ForegroundColor Red
}

finally {
    # Stop transcript logging
    Stop-Transcript
}
